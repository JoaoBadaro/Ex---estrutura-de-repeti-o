Exercicio 2

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

class Program
{
    static void Main()
    {
        double primeiroValor = ObterValorPositivo("Digite o primeiro valor (valor positivo): ");
        double segundoValor = ObterSegundoValorMaior(primeiroValor);

        // Exibe os valores válidos inseridos
        Console.WriteLine($"Primeiro valor: {primeiroValor}");
        Console.WriteLine($"Segundo valor: {segundoValor}");
    }

    static double ObterValorPositivo(string mensagem)
    {
        double valor;

        while (true)
        {
            Console.Write(mensagem);
            if (double.TryParse(Console.ReadLine(), out valor) && valor > 0)
            {
                break;
            }
            Console.WriteLine("Valor inválido. Por favor, digite um valor positivo.");
        }

        return valor;
    }

    static double ObterSegundoValorMaior(double primeiroValor)
    {
        double segundoValor;

        while (true)
        {
            Console.Write("Digite o segundo valor (deve ser maior que o primeiro valor): ");
            if (double.TryParse(Console.ReadLine(), out segundoValor) && segundoValor > primeiroValor)
            {
                break;
            }
            Console.WriteLine("Valor inválido. O segundo valor deve ser maior que o primeiro valor.");
        }

        return segundoValor;
    }
}

Exercicio 3
﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
class Program
{
    static void Main()
    {
        string sexo = ObterSexo();

        // Exibe o sexo válido inserido
        Console.WriteLine($"Sexo inserido: {sexo}");
    }

    static string ObterSexo()
    {
        string sexo;

        while (true)
        {
            Console.Write("Digite o sexo (F para feminino, M para masculino): ");
            sexo = Console.ReadLine().Trim().ToUpper();

            if (sexo == "F" || sexo == "M")
            {
                return sexo;
            }
            else
            {
                Console.WriteLine("Entrada inválida. Por favor, digite 'F' para feminino ou 'M' para masculino.");
            }
        }
    }
}

Exercicio 4

﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
class Program
{
    static void Main()
    {
        int numero = 5;
        ExibirTabuada(numero);
    }

    static void ExibirTabuada(int numero)
    {
        Console.WriteLine($"Tabuada do número {numero}:");

        // Loop para gerar e exibir a tabuada do número
        for (int i = 1; i <= 10; i++)
        {
            Console.WriteLine($"{numero} x {i} = {numero * i}");
        }
    }
}

Exercicio 5 
﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;


class Program
{
    static void Main()
    {
        double valor = ObterValorPositivo();

        // Exibe a tabuada do valor inserido no intervalo de 1 a 10
        ExibirTabuada(valor);
    }

    static double ObterValorPositivo()
    {
        double valor;

        while (true)
        {
            Console.Write("Digite um valor positivo: ");
            if (double.TryParse(Console.ReadLine(), out valor) && valor > 0)
            {
                return valor;
            }
            else
            {
                Console.WriteLine("Valor inválido. Por favor, digite um valor positivo.");
            }
        }
    }

    static void ExibirTabuada(double valor)
    {
        Console.WriteLine($"Tabuada do número {valor}:");

        for (int i = 1; i <= 10; i++)
        {
            Console.WriteLine($"{valor} x {i} = {valor * i}");
        }
    }
}

Exercicio 7
﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

class Program
{
    static void Main()
    {
        ExibirTabuadas(1, 20);
    }

    static void ExibirTabuadas(int inicio, int fim)
    {
        for (int numero = inicio; numero <= fim; numero++)
        {
            ExibirTabuada(numero);
            // Solicita que o usuário pressione uma tecla para continuar
            Console.WriteLine("Pressione qualquer tecla para continuar para a próxima tabuada...");
            Console.ReadKey();
            Console.WriteLine(); // Adiciona uma linha em branco para separar as tabuadas
        }
    }

    static void ExibirTabuada(int numero)
    {
        Console.WriteLine($"Tabuada do número {numero}:");

        for (int i = 1; i <= 10; i++)
        {
            Console.WriteLine($"{numero} x {i} = {numero * i}");
        }
    }
}

Exercicio 8
﻿using System;

class Program
{
    static void Main()
    {
        int soma = SomarNumeros(1, 100);
        ExibirResultado(soma);
    }

    static int SomarNumeros(int inicio, int fim)
    {
        int soma = 0;

        // Loop para somar os números de 'inicio' a 'fim'
        for (int i = inicio; i <= fim; i++)
        {
            soma += i;
        }

        return soma;
    }

    static void ExibirResultado(int soma)
    {
        // Exibe a soma total
        Console.WriteLine($"A soma dos números inteiros positivos de 1 a 100 é: {soma}");
    }
}

Exercicio 9 
﻿using System;

class Program
{
    static void Main()
    {
        int quantidade = 30;
        ExibirFibonacci(quantidade);
    }

    static void ExibirFibonacci(int quantidade)
    {
        // Inicializa os dois primeiros números da série de Fibonacci
        int num1 = 1;
        int num2 = 1;

        Console.WriteLine($"Os primeiros {quantidade} valores da série de Fibonacci:");

        // Loop para calcular e exibir os valores da série de Fibonacci
        for (int i = 0; i < quantidade; i++)
        {
            // Exibe o número atual da série
            Console.WriteLine(num1);

            // Calcula o próximo número da série somando os dois últimos números
            int proximoNumero = num1 + num2;

            // Atualiza os dois últimos números para os próximos cálculos
            num1 = num2;
            num2 = proximoNumero;
        }
    }
}

Exercicio 10
﻿using System;

class Program
{
    static void Main()
    {
        const int quantidadeValores = 10;
        double[] valores = ObterValores(quantidadeValores);
        double maiorValor = ObterMaiorValor(valores);
        double soma = CalcularSoma(valores);
        double media = CalcularMedia(soma, quantidadeValores);

        // Exibe os resultados
        ExibirResultados(maiorValor, soma, media);
    }

    static double[] ObterValores(int quantidade)
    {
        double[] valores = new double[quantidade];

        for (int i = 0; i < quantidade; i++)
        {
            valores[i] = ObterValorPositivo(i + 1);
        }

        return valores;
    }

    static double ObterValorPositivo(int indice)
    {
        double valor;
        while (true)
        {
            Console.Write($"Digite o {indice}º valor positivo: ");
            if (double.TryParse(Console.ReadLine(), out valor) && valor > 0)
            {
                return valor;
            }
            else
            {
                Console.WriteLine("Valor inválido. Por favor, digite um valor positivo.");
            }
        }
    }

    static double ObterMaiorValor(double[] valores)
    {
        double maiorValor = double.MinValue;

        foreach (double valor in valores)
        {
            if (valor > maiorValor)
            {
                maiorValor = valor;
            }
        }

        return maiorValor;
    }

    static double CalcularSoma(double[] valores)
    {
        double soma = 0;

        foreach (double valor in valores)
        {
            soma += valor;
        }

        return soma;
    }

    static double CalcularMedia(double soma, int quantidade)
    {
        return soma / quantidade;
    }

    static void ExibirResultados(double maiorValor, double soma, double media)
    {
        Console.WriteLine($"Maior valor inserido: {maiorValor}");
        Console.WriteLine($"Soma dos valores: {soma}");
        Console.WriteLine($"Média aritmética dos valores: {media}");
    }
}

Exercicio 11
﻿using System;

class Program
{
    static void Main()
    {
        int quantidadeValores = ObterQuantidadeValores();
        double[] valores = ObterValores(quantidadeValores);

        double maiorValor = ObterMaiorValor(valores);
        double menorValor = ObterMenorValor(valores);
        double soma = CalcularSoma(valores);
        double media = CalcularMedia(soma, quantidadeValores);
        (int positivos, int negativos) = ContarPositivosENegativos(valores);
        double porcentagemPositivos = CalcularPorcentagem(positivos, quantidadeValores);
        double porcentagemNegativos = CalcularPorcentagem(negativos, quantidadeValores);

        ExibirResultados(maiorValor, menorValor, soma, media, porcentagemPositivos, porcentagemNegativos);
    }

    static int ObterQuantidadeValores()
    {
        int quantidadeValores;
        while (true)
        {
            Console.Write("Digite a quantidade de valores (N) (positiva, mas menor que vinte): ");
            if (int.TryParse(Console.ReadLine(), out quantidadeValores) && quantidadeValores > 0 && quantidadeValores < 20)
            {
                return quantidadeValores;
            }
            else
            {
                Console.WriteLine("Quantidade inválida. Por favor, digite um valor positivo, mas menor que vinte.");
            }
        }
    }

    static double[] ObterValores(int quantidade)
    {
        double[] valores = new double[quantidade];
        for (int i = 0; i < quantidade; i++)
        {
            valores[i] = ObterValor(i + 1);
        }
        return valores;
    }

    static double ObterValor(int indice)
    {
        double valor;
        while (true)
        {
            Console.Write($"Digite o {indice}º valor: ");
            if (double.TryParse(Console.ReadLine(), out valor))
            {
                return valor;
            }
            else
            {
                Console.WriteLine("Valor inválido. Por favor, digite um número.");
            }
        }
    }

    static double ObterMaiorValor(double[] valores)
    {
        double maiorValor = double.MinValue;
        foreach (double valor in valores)
        {
            if (valor > maiorValor)
            {
                maiorValor = valor;
            }
        }
        return maiorValor;
    }

    static double ObterMenorValor(double[] valores)
    {
        double menorValor = double.MaxValue;
        foreach (double valor in valores)
        {
            if (valor < menorValor)
            {
                menorValor = valor;
            }
        }
        return menorValor;
    }

    static double CalcularSoma(double[] valores)
    {
        double soma = 0;
        foreach (double valor in valores)
        {
            soma += valor;
        }
        return soma;
    }

    static double CalcularMedia(double soma, int quantidade)
    {
        return soma / quantidade;
    }

    static (int positivos, int negativos) ContarPositivosENegativos(double[] valores)
    {
        int positivos = 0;
        int negativos = 0;

        foreach (double valor in valores)
        {
            if (valor > 0)
            {
                positivos++;
            }
            else if (valor < 0)
            {
                negativos++;
            }
        }

        return (positivos, negativos);
    }

    static double CalcularPorcentagem(int quantidade, int total)
    {
        return (double)quantidade / total * 100;
    }

    static void ExibirResultados(double maiorValor, double menorValor, double soma, double media, double porcentagemPositivos, double porcentagemNegativos)
    {
        Console.WriteLine($"Maior valor inserido: {maiorValor}");
        Console.WriteLine($"Menor valor inserido: {menorValor}");
        Console.WriteLine($"Soma dos valores: {soma}");
        Console.WriteLine($"Média aritmética dos valores: {media}");
        Console.WriteLine($"Porcentagem de valores positivos: {porcentagemPositivos:F2}%");
        Console.WriteLine($"Porcentagem de valores negativos: {porcentagemNegativos:F2}%");
    }
}

Exercicio 12
﻿using System;

class Program
{
    static void Main()
    {
        do
        {
            // Obtém a quantidade de valores do usuário
            int quantidadeValores = ObterQuantidadeValores();

            // Obtém os valores e realiza os cálculos
            (double maiorValor, double menorValor, double soma, double media, double porcentagemPositivos, double porcentagemNegativos) = ProcessarValores(quantidadeValores);

            // Exibe os resultados
            ExibirResultados(maiorValor, menorValor, soma, media, porcentagemPositivos, porcentagemNegativos);

            // Pergunta ao usuário se deseja executar o programa novamente
        } while (DesejaContinuar());
    }

    static int ObterQuantidadeValores()
    {
        int quantidadeValores;
        while (true)
        {
            Console.Write("Digite a quantidade de valores (N) (positiva, mas menor que vinte): ");
            if (int.TryParse(Console.ReadLine(), out quantidadeValores) && quantidadeValores > 0 && quantidadeValores < 20)
            {
                return quantidadeValores;
            }
            else
            {
                Console.WriteLine("Quantidade inválida. Por favor, digite um valor positivo, mas menor que vinte.");
            }
        }
    }

    static (double maiorValor, double menorValor, double soma, double media, double porcentagemPositivos, double porcentagemNegativos) ProcessarValores(int quantidade)
    {
        double maiorValor = double.MinValue;
        double menorValor = double.MaxValue;
        double soma = 0;
        int positivos = 0;
        int negativos = 0;

        for (int i = 0; i < quantidade; i++)
        {
            double valor = ObterValor(i + 1);

            // Atualiza o maior e menor valor
            if (valor > maiorValor) maiorValor = valor;
            if (valor < menorValor) menorValor = valor;

            // Soma os valores e conta positivos e negativos
            soma += valor;
            if (valor > 0) positivos++;
            if (valor < 0) negativos++;
        }

        double media = soma / quantidade;
        double porcentagemPositivos = CalcularPorcentagem(positivos, quantidade);
        double porcentagemNegativos = CalcularPorcentagem(negativos, quantidade);

        return (maiorValor, menorValor, soma, media, porcentagemPositivos, porcentagemNegativos);
    }

    static double ObterValor(int indice)
    {
        double valor;
        while (true)
        {
            Console.Write($"Digite o {indice}º valor: ");
            if (double.TryParse(Console.ReadLine(), out valor))
            {
                return valor;
            }
            else
            {
                Console.WriteLine("Valor inválido. Por favor, digite um número.");
            }
        }
    }

    static double CalcularPorcentagem(int quantidade, int total)
    {
        return (double)quantidade / total * 100;
    }

    static void ExibirResultados(double maiorValor, double menorValor, double soma, double media, double porcentagemPositivos, double porcentagemNegativos)
    {
        Console.WriteLine($"Maior valor inserido: {maiorValor}");
        Console.WriteLine($"Menor valor inserido: {menorValor}");
        Console.WriteLine($"Soma dos valores: {soma}");
        Console.WriteLine($"Média aritmética dos valores: {media}");
        Console.WriteLine($"Porcentagem de valores positivos: {porcentagemPositivos:F2}%");
        Console.WriteLine($"Porcentagem de valores negativos: {porcentagemNegativos:F2}%");
    }

    static bool DesejaContinuar()
    {
        while (true)
        {
            Console.Write("Deseja executar o programa novamente? (S/N): ");
            string resposta = Console.ReadLine().ToUpper();

            if (resposta == "S") return true;
            if (resposta == "N") return false;

            Console.WriteLine("Resposta inválida. Por favor, digite 'S' para sim ou 'N' para não.");
        }
    }
}

Exercicio 13
﻿using System;

class Program
{
    static void Main()
    {
        do
        {
            // Obtém a quantidade de valores do usuário
            int quantidadeValores = ObterQuantidadeValores();

            // Obtém os valores e realiza os cálculos
            (double maiorValor, double menorValor, double soma, double media, double porcentagemPositivos, double porcentagemNegativos) = ProcessarValores(quantidadeValores);

            // Exibe os resultados
            ExibirResultados(maiorValor, menorValor, soma, media, porcentagemPositivos, porcentagemNegativos);

            // Pergunta ao usuário se deseja executar o programa novamente
        } while (DesejaContinuar());
    }

    static int ObterQuantidadeValores()
    {
        int quantidadeValores;
        while (true)
        {
            Console.Write("Digite a quantidade de valores (N) (positiva, mas menor que vinte): ");
            if (int.TryParse(Console.ReadLine(), out quantidadeValores) && quantidadeValores > 0 && quantidadeValores < 20)
            {
                return quantidadeValores;
            }
            else
            {
                Console.WriteLine("Quantidade inválida. Por favor, digite um valor positivo, mas menor que vinte.");
            }
        }
    }

    static (double maiorValor, double menorValor, double soma, double media, double porcentagemPositivos, double porcentagemNegativos) ProcessarValores(int quantidade)
    {
        double maiorValor = double.MinValue;
        double menorValor = double.MaxValue;
        double soma = 0;
        int positivos = 0;
        int negativos = 0;

        for (int i = 0; i < quantidade; i++)
        {
            double valor = ObterValor(i + 1);

            // Atualiza o maior e menor valor
            if (valor > maiorValor) maiorValor = valor;
            if (valor < menorValor) menorValor = valor;

            // Soma os valores e conta positivos e negativos
            soma += valor;
            if (valor > 0) positivos++;
            if (valor < 0) negativos++;
        }

        double media = soma / quantidade;
        double porcentagemPositivos = CalcularPorcentagem(positivos, quantidade);
        double porcentagemNegativos = CalcularPorcentagem(negativos, quantidade);

        return (maiorValor, menorValor, soma, media, porcentagemPositivos, porcentagemNegativos);
    }

    static double ObterValor(int indice)
    {
        double valor;
        while (true)
        {
            Console.Write($"Digite o {indice}º valor: ");
            if (double.TryParse(Console.ReadLine(), out valor))
            {
                return valor;
            }
            else
            {
                Console.WriteLine("Valor inválido. Por favor, digite um número.");
            }
        }
    }

    static double CalcularPorcentagem(int quantidade, int total)
    {
        return (double)quantidade / total * 100;
    }

    static void ExibirResultados(double maiorValor, double menorValor, double soma, double media, double porcentagemPositivos, double porcentagemNegativos)
    {
        Console.WriteLine($"Maior valor inserido: {maiorValor}");
        Console.WriteLine($"Menor valor inserido: {menorValor}");
        Console.WriteLine($"Soma dos valores: {soma}");
        Console.WriteLine($"Média aritmética dos valores: {media}");
        Console.WriteLine($"Porcentagem de valores positivos: {porcentagemPositivos:F2}%");
        Console.WriteLine($"Porcentagem de valores negativos: {porcentagemNegativos:F2}%");
    }

    static bool DesejaContinuar()
    {
        while (true)
        {
            Console.Write("Deseja executar o programa novamente? (S/N): ");
            string resposta = Console.ReadLine().ToUpper();

            if (resposta == "S") return true;
            if (resposta == "N") return false;

            Console.WriteLine("Resposta inválida. Por favor, digite 'S' para sim ou 'N' para não.");
        }
    }
}
